/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;
import java.io.*;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import model.*;
/**
 *
 * @author polares
 */
public class InicioAdmin extends VentanaBase {

    /**
     * Creates new form InicioAdmin
     */
    public InicioAdmin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cargaRepuestosBoton = new javax.swing.JButton();
        cargaServiciosBoton = new javax.swing.JButton();
        cargaClientesBoton = new javax.swing.JButton();
        cerrarSesionBoton = new javax.swing.JButton();
        verProgresoAutosBoton = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Bienvenido Admin: ");

        cargaRepuestosBoton.setText("Carga de Repuestos");
        cargaRepuestosBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargaRepuestosBotonActionPerformed(evt);
            }
        });

        cargaServiciosBoton.setText("Carga de Servicios");
        cargaServiciosBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargaServiciosBotonActionPerformed(evt);
            }
        });

        cargaClientesBoton.setText("Carga de Clientes y Automóviles");
        cargaClientesBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargaClientesBotonActionPerformed(evt);
            }
        });

        cerrarSesionBoton.setText("Cerrar Sesión");
        cerrarSesionBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarSesionBotonActionPerformed(evt);
            }
        });

        verProgresoAutosBoton.setText("Progreso Autos");
        verProgresoAutosBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verProgresoAutosBotonActionPerformed(evt);
            }
        });

        jButton6.setText("Reportes");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cargaClientesBoton)
                .addGap(72, 72, 72))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(verProgresoAutosBoton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addGap(57, 57, 57))
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cerrarSesionBoton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cargaRepuestosBoton)
                        .addGap(53, 53, 53)
                        .addComponent(cargaServiciosBoton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cerrarSesionBoton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1)))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cargaRepuestosBoton)
                    .addComponent(cargaServiciosBoton))
                .addGap(18, 18, 18)
                .addComponent(cargaClientesBoton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(verProgresoAutosBoton)
                    .addComponent(jButton6))
                .addGap(58, 58, 58))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cerrarSesionBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarSesionBotonActionPerformed
        // TODO add your handling code here:
        this.cerrarSesion();
    }//GEN-LAST:event_cerrarSesionBotonActionPerformed

    private void cargarArchivo(int tipo, String extension) { //tipo: tipoCarga, extension: extensionArchivo
        JFileChooser sel = new JFileChooser(); //Ventana de file chooser
   
        sel.setDialogTitle("Seleccionar archivo " + extension);

        //Filtro para aceptar solo archivos con la extensión pasada
        sel.setFileFilter(new FileNameExtensionFilter("Archivos " + extension + " (*. " + extension +")", extension));

        int resultado = sel.showOpenDialog(null);

        if (resultado == JFileChooser.APPROVE_OPTION) { //Si el usuario selecciona un archivo
            File archivo = sel.getSelectedFile();
            if (archivo != null) {
                try {
                    Vector carga = new Vector<Object>(); //Donde se guardan los objetos cargados

                    BufferedReader fa2 = new BufferedReader(new FileReader(archivo));
                    String linea;
                    int index = 0; //Indice de la linea en la que voy

                    while ((linea = fa2.readLine()) != null) {
                        if(index == 0) { //Pasarme la primera linea
                            index++;
                        } else {
                            String[] datos = linea.split("-");
                            
                            if(tipo == 1) { //Vienen clientes
                                //Cliente(dpi, nombre, nombreUsuario, contra, tipoCliente)
                                if(this.getControlador().buscarClientePorDPI(datos[0])) {
                                    this.mostrarError("Cliente con dpi" + datos[0] + "no se agregó");
                                    continue;
                                }
                                Cliente cliente = new Cliente(datos[0], datos[1], datos[2], datos[3], datos[4]);
                                
                                //Se le crea la ventana de progreso al cliente
                                cliente.setVentanaProgreso(new VerProgreso());
                                cliente.getVentanaProgreso().setControlador(this.getControlador());
                                
                                if(datos.length > 5) { //Vienen automoviles
                                    String[] autos = datos[5].split(";");
                                    for(int i = 0; i<autos.length; i++) {
                                        String[] carro = autos[i].split(",");
                                        //Auto(placa, marca, modelo, foto, propietario)
                                        Automovil auto = new Automovil(carro[0], carro[1], carro[2], carro[3], cliente.getDpi());
                                        cliente.getListaAutomoviles().add(auto);
                                    }
                                }
                                carga.add(cliente);
                            } else if(tipo == 2) { //Vienen repuestos
                                //Repuesto(nombre, marca, modelo, existencias, precio)
                                int existencia = Integer.parseInt(datos[3]);
                                double precio = Double.parseDouble(datos[4]);
                                Repuesto rep = new Repuesto(datos[0], datos[1], datos[2], existencia, precio);
                                this.getControlador().cargarRepuesto(rep);
                            } else if(tipo == 3) { //Vienen servicios
                                if(this.getControlador().buscarServicio(datos[0])) {
                                    this.mostrarError("Servicio duplicado con id" + datos[0] + "no se agregó");
                                    continue;
                                }
                                //id-nombre,marca,modelo,listarep-precioManoObra
                                //Servicio(id, nombre, marca, modelo, precioManoObra)
                                double manoObra = Double.parseDouble(datos[5]);
                                Servicio serv = new Servicio(datos[0], datos[1], datos[2], datos[3], manoObra);
                                if(datos.length > 5) { //Vienen repuestos
                                    String[] repuestos = datos[4].split(";");
                                    for(int i = 0; i<repuestos.length; i++) {
                                        Repuesto rep = this.getControlador().buscarRepuesto(repuestos[i]);
                                        if(rep != null) { //Si el repuesto no existe, no se agrega
                                            serv.getListaRepuestos().add(rep);
                                        }
                                    }
                                }
                                carga.add(serv);
                            }
                        }
                    }
                    fa2.close();
                    this.getControlador().cargarObjetos(carga, tipo);
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null, "Error al leer el archivo: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "No se seleccionó ningún archivo.", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }
    private void cargaClientesBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargaClientesBotonActionPerformed
        // TODO add your handling code here:
        this.cargarArchivo(1, "tmca");
        
    }//GEN-LAST:event_cargaClientesBotonActionPerformed

    private void cargaServiciosBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargaServiciosBotonActionPerformed
        // TODO add your handling code here:
        this.cargarArchivo(3, "tms");
        this.getControlador().getModelo().imprimirServicios();

    }//GEN-LAST:event_cargaServiciosBotonActionPerformed

    private void cargaRepuestosBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargaRepuestosBotonActionPerformed
        // TODO add your handling code here:
        this.cargarArchivo(2, "tmr");
        this.getControlador().getModelo().imprimirRepuestos();
    }//GEN-LAST:event_cargaRepuestosBotonActionPerformed

    private void verProgresoAutosBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verProgresoAutosBotonActionPerformed
        // TODO add your handling code here:
        this.getControlador().mostrarVentana(TipoVentana.Ventana.VER_PROGRESO_ADMIN);
        this.getControlador().llenarTablasColas();
    }//GEN-LAST:event_verProgresoAutosBotonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InicioAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InicioAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InicioAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InicioAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InicioAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cargaClientesBoton;
    private javax.swing.JButton cargaRepuestosBoton;
    private javax.swing.JButton cargaServiciosBoton;
    private javax.swing.JButton cerrarSesionBoton;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton verProgresoAutosBoton;
    // End of variables declaration//GEN-END:variables
}
