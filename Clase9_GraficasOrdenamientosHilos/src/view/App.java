/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.awt.BorderLayout;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;
import model.Pokemon;
import org.jfree.chart.ChartPanel;

/**
 *
 * @author polares
 */
public class App extends VentanaBase {

    /**
     * Creates new form App
     */
    public App() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ordenarBoton = new javax.swing.JButton();
        labelDesordenada = new javax.swing.JLabel();
        labelOrdenada = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelDesordenada = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        panelOrdenada = new javax.swing.JTextPane();
        labelTiempo = new javax.swing.JLabel();
        cargarBoton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Ordenar Pokemones");

        ordenarBoton.setText("Ordenar");
        ordenarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenarBotonActionPerformed(evt);
            }
        });

        labelDesordenada.setText("Lista de pokemones: ");

        labelOrdenada.setText("Lista de ordenada: ");

        jScrollPane1.setViewportView(panelDesordenada);

        jScrollPane2.setViewportView(panelOrdenada);

        labelTiempo.setText("Tiempo -> ");

        cargarBoton.setText("Cargar Archivo");
        cargarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(166, 166, 166)
                .addComponent(cargarBoton)
                .addGap(34, 34, 34)
                .addComponent(ordenarBoton)
                .addGap(25, 25, 25))
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelDesordenada)
                        .addContainerGap(716, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelOrdenada)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelTiempo)
                        .addGap(325, 325, 325))))
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 758, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ordenarBoton)
                    .addComponent(cargarBoton))
                .addGap(6, 6, 6)
                .addComponent(labelDesordenada)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelOrdenada)
                    .addComponent(labelTiempo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ordenarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenarBotonActionPerformed
        // TODO add your handling code here:
        getControlador().mostrarVentana(TipoVentana.Ventana.ELECCION_ORDENAMIENTO);
        getControlador().llenarListas();//Para llenar las listas desplegables
    }//GEN-LAST:event_ordenarBotonActionPerformed

    private void cargarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarBotonActionPerformed
        // TODO add your handling code here:
        JFileChooser sel = new JFileChooser(); //Ventana de file chooser
        sel.setDialogTitle("Seleccionar archivo .ipc1");

        //Filtro para aceptar solo archivos con extensión .ipc1
        sel.setFileFilter(new FileNameExtensionFilter("Archivos IPC1 (*.ipc1)", "ipc1"));

        int resultado = sel.showOpenDialog(null);

        if (resultado == JFileChooser.APPROVE_OPTION) { //Si el usuario selecciona un archivo
            File archivo = sel.getSelectedFile();
            if (archivo != null) {
                try (BufferedReader fa = new BufferedReader(new FileReader(archivo))) {
                    //Se cuentan las líneas para definir el tamaño del array
                    int lineCount = (int) fa.lines().count() - 1; //No se cuenta la primera linea
                    fa.close(); //Se cierra y despues se vuelve a abrir para leer contenido

                    //Creamos un array con el tamano de los pokemones
                    Pokemon[] pokemones = new Pokemon[lineCount];

                    BufferedReader fa2 = new BufferedReader(new FileReader(archivo));
                    String linea;
                    int index = 0; //Indice de la linea en la que voy
                    int contadorPokemones = 0; //Contador de los pokemones que voy leyendo

                    while ((linea = fa2.readLine()) != null) {
                        System.out.println(linea);
                        if(index == 0) { //Pasarme la primera linea
                            index++;
                        } else {
                            String[] datos = linea.split(",");
                            //Pikachu, 19
                            //datos = ["Pikachu"," 19"]
                            String nombre = datos[0].trim(); //Elimina los espacios en blanco
                            int ataque = Integer.parseInt(datos[1].trim()); //Elimina los espacios en blanco
                            pokemones[contadorPokemones++] = new Pokemon(nombre, ataque);
                        }
                    }
                    fa2.close();
                    getControlador().cargarPokemones(pokemones);
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null, "Error al leer el archivo: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "No se seleccionó ningún archivo.", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_cargarBotonActionPerformed

    public void llenarDesordenada(ChartPanel chartPanel) {
        SwingUtilities.invokeLater(() -> {
            this.panelDesordenada.removeAll(); //Se remueve la gráfica anterior
            chartPanel.setSize(this.panelDesordenada.getWidth(), this.panelDesordenada.getHeight());
            chartPanel.setPreferredSize(this.panelDesordenada.getSize());

            this.panelDesordenada.setLayout(new java.awt.BorderLayout());
            this.panelDesordenada.add(chartPanel, BorderLayout.CENTER);

            this.panelDesordenada.revalidate(); //Se vuelve a calcular el layout
            this.panelDesordenada.repaint();    //Se redibuja el panel
        });
    }
    
    public void llenarOrdenada(ChartPanel chartPanel) {
        SwingUtilities.invokeLater(() -> {
            this.panelOrdenada.removeAll(); //Se remueve la gráfica anterior
            chartPanel.setSize(this.panelOrdenada.getWidth(), this.panelOrdenada.getHeight());
            chartPanel.setPreferredSize(this.panelOrdenada.getSize());

            this.panelOrdenada.setLayout(new java.awt.BorderLayout());
            this.panelOrdenada.add(chartPanel, BorderLayout.CENTER);

            this.panelOrdenada.revalidate(); //Se Vuelve a calcular el layout
            this.panelOrdenada.repaint();    //Se redibuja el panel
        });
    }
    
    public void llenarLabelTiempo(String contenido) {
        this.labelTiempo.setText(contenido);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cargarBoton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelDesordenada;
    private javax.swing.JLabel labelOrdenada;
    private javax.swing.JLabel labelTiempo;
    private javax.swing.JButton ordenarBoton;
    private javax.swing.JTextPane panelDesordenada;
    private javax.swing.JTextPane panelOrdenada;
    // End of variables declaration//GEN-END:variables
}
